-*- mode: outline; coding: utf-8 -*-

* about

Lambda Calculator

* note

** peg syntax

name = [a-z]
var = name
abs = "λ" name "." term
paren = ( term )
prim = paren | abs | var
app = prim prim*
term = app

file://localhost/Users/takashi/src/lambda/lambda.html
http://www.cis.upenn.edu/~bcpierce/tapl/checkers/untyped/
http://code.google.com/p/tapl-haskell/

true = \x.\y.x
false = \x.\y.y
if-then-else = \a.\b.\c.((a)b)c

todo: show intermediate process

λg.λx.(g xx) λx.g xx
λg.(λx.g xx) λx.g xx
